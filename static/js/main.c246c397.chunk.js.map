{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Route.js","components/App.js","index.js"],"names":["googleProvider","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","GoogleAuthProvider","githubProvider","GithubAuthProvider","authService","getAuth","db","getFirestore","storage","getStorage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","socialClick","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","nweet","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","inputAttachment","useRef","setNweet","attachment","setAttachment","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","current","nweetPosting","createdAt","Date","now","creatorId","addDoc","collection","maxLength","htmlFor","faPlus","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","data","marginTop","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","onLogOutClick","signOut","push","getMyNweets","where","getDocs","forEach","updateProfile","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLogin","basename","maxWidth","width","margin","exact","path","App","setIsLogin","init","setInit","userObject","setUserObject","onAuthStateChanged","user","args","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c246c397.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  GoogleAuthProvider,\n  signInWithPopup,\n  GithubAuthProvider,\n  signOut,\n} from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\nconst githubProvider = new GithubAuthProvider();\n\nexport const authService = getAuth();\nexport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  googleProvider,\n  signInWithPopup,\n  githubProvider,\n  signOut,\n};\nexport const db = getFirestore();\nexport const storage = getStorage();\n","import React, { useState } from \"react\";\nimport {\n  authService,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"fbase\";\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n\n  // 실행시마다 NewAccount 값이 반대로 바뀜(true, false)\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (newAccount) {\n        //create Id\n        const data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        //log in\n        const data = await signInWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          onChange={onChange}\n          type=\"email\"\n          placeholder=\"email\"\n          name=\"email\"\n          required\n          value={email}\n          className=\"authInput\"\n        />\n        <input\n          onChange={onChange}\n          type=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          required\n          value={password}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"components/AuthForm\";\nimport {\n  authService,\n  googleProvider,\n  signInWithPopup,\n  githubProvider,\n} from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const socialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    if (name === \"google\") await signInWithPopup(authService, googleProvider);\n    else if (name === \"github\")\n      await signInWithPopup(authService, githubProvider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n\n      <div className=\"authBtns\">\n        <button name=\"google\" onClick={socialClick} className=\"authBtn\">\n          Continue with Google\n          <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={socialClick} className=\"authBtn\">\n          Continue with Github\n          <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"fbase\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.nweet);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    // console.log(\"집중\", nweetObj); button은 각각의 Nweet에 붙어있으므로 클릭시 각각 다른 데이터를 props해온다.\n    if (ok) {\n      // 데이터 삭제\n      await deleteDoc(doc(db, `nweets/${nweetObj.id}`)); // 컬렉션/문서\n      await deleteObject(ref(storage, nweetObj.attachmentUrl));\n    }\n  };\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n    setNewNweet(nweetObj.nweet);\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await updateDoc(doc(db, `nweets/${nweetObj.id}`), {\n      nweet: newNweet,\n    });\n    setEditing((prev) => !prev);\n  };\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && ( //보안을 높이려고 설정.\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your nweet\"\n                  value={newNweet}\n                  required\n                  autoFocus\n                  onChange={onChange}\n                  className=\"formInput\"\n                />\n                {/* <button onClick={onSubmit}>Edit</button> */}\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span className=\"formBtn cancelBtn\" onClick={toggleEditing}>\n                Cancel\n              </span>\n              {/* <button onClick={onSubmit}>Edit</button> 같은 form안에 넣어주면 enter키를 눌러도 제출이 된다.\n            submit이 필요한 경우에는 input 아닐 경우에 button을 사용해도 상관없을 것 같다.\n          */}\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.nweet}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n\n          {/* 내가 쓴 댓글만 삭제,수정 버튼 만들기 */}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { db, storage } from \"fbase\";\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const inputAttachment = useRef();\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNweet(value);\n  };\n\n  // 데이터 생성\n  const onSubmit = async (e) => {\n    if (nweet === \"\") {\n      e.preventDefault();\n      return;\n    }\n\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      //파일 경로 참조 만들기\n      const fileRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\n      //storage 참조 경로로 파일 업로드 하기\n      const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\n\n      //storage에 있는 파일 URL로 다운로드 받기\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\n      inputAttachment.current.value = null;\n    }\n\n    //트윗할때, 메시지와 사진도 같이 firestore에 생성\n    const nweetPosting = {\n      nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await addDoc(collection(db, \"nweets\"), nweetPosting);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    inputAttachment.current.value = null;\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input className=\"factoryInput__arrow\" type=\"submit\" value=\"Nweet\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n\n      <input\n        id=\"attach-file\"\n        ref={inputAttachment}\n        onChange={onFileChange}\n        type=\"file\"\n        accept=\"image/*\"\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { db } from \"fbase\";\nimport { collection, query, onSnapshot, orderBy } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  // 데이터 실시간 조회\n  useEffect(() => {\n    // const querySnapshot = await getDocs(collection(db, \"nweets\"));\n    // querySnapshot.forEach((doc) => {\n    //   const nweetObject = { ...doc.data(), id: doc.id };\n    //   setNweets((prev) => [nweetObject, ...prev]);\n    // }); // 실시간으로 바뀌지 않음, 실시간으로 바뀌려면 onSnapshot 사용 해야함.\n    const q = query(collection(db, \"nweets\"), orderBy(\"createdAt\", \"desc\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      //   querySnapshot.forEach((doc) => {\n      //     const nweetObject = { ...doc.data(), id: doc.id };\n      //     setNweets((prev) => [nweetObject, ...prev]);\n      //   }); // 기존의 데이터가 남아 있는채로 중첩되어 랜더링됌, 실시간으로 바뀌긴함\n      const newArray = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setNweets(newArray);\n    });\n\n    return () => {\n      unsubscribe(); //불필요한 통신을 끊기 위해서 => 좀 더 찾아보기\n    };\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid} // 내가 쓴 댓글을 boolean값으로 전달해준다.\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { signOut, authService, db } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport { collection, getDocs, orderBy, query, where } from \"firebase/firestore\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n\n  const onLogOutClick = async () => {\n    await signOut(authService);\n    history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    //데이터베이스에서 내 nweet만 불러오기\n    const q = query(\n      collection(db, \"nweets\"),\n      orderBy(\"createdAt\", \"desc\"),\n      where(\"creatorId\", \"==\", userObj.uid)\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {});\n  };\n  useEffect(() => {\n    getMyNweets();\n  });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(userObj, { displayName: newDisplayName });\n    }\n    refreshUser();\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLogin, userObj }) => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      {\n        isLogin && (\n          <Navigation userObj={userObj} />\n        ) /* Login되었을때만 Navigation이 실행됌  */\n      }\n      <Switch /*Switch는 첫번째 매칭 되는 라우터만 실행하게 해준다. */>\n        <>\n          {isLogin ? (\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile refreshUser={refreshUser} userObj={userObj} />\n              </Route>\n            </div>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import AppRouter from \"components/Route\";\nimport React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  // 유저 로그인 유무\n  const [isLogin, setIsLogin] = useState(false);\n  // useEffect에서 데이터를 가져오기 전까지의 상태를 초기화한다.\n  // Login확인 유무를 기다리는 로딩이라고 생각하면 될 것 같다.\n  const [init, setInit] = useState(false);\n  const [userObject, setUserObject] = useState(null);\n\n  useEffect(() => {\n    // 이 작업은 바로 되지 않고 조금의 시간이 걸린다.\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLogin(true);\n        setUserObject(user);\n        // setUserObject({\n        //   displayName: user.displayName,\n        //   uid: user.uid,\n        //   updateProfile: (args) => user.updateProfile(args),\n        // });\n      } else setIsLogin(false);\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    setUserObject({\n      displayName: userObject.displayName,\n      uid: userObject.uid,\n      //밑에 코드는 이유를 없어도 똑같이 동작한다. 왜 작성해야하는지 아직 모르겠음\n      updateProfile: (args) => {\n        userObject.updateProfile(args);\n      },\n    });\n    // setUserObject({ ...userObject }); //이렇게 해도된다.\n\n    setUserObject(userObject);\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLogin={isLogin}\n          userObj={userObject}\n        />\n      ) : (\n        \"initalization\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}